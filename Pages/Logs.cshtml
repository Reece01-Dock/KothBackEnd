@page
@model KothBackend.Pages.LogsModel
@{
    ViewData["Title"] = "Request Logs";
}

<!DOCTYPE html>
<html>
<head>
    <title>Request Logs</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .log-details {
            max-height: 200px;
            overflow-y: auto;
        }
        .timestamp {
            white-space: nowrap;
        }
        .method-badge {
            width: 80px;
        }
    </style>
</head>
<body>
    <div class="container-fluid py-3">
        <h1>Request Logs</h1>
        <div class="mb-3">
            <form method="post" asp-page-handler="Clear" class="d-inline">
                <button type="submit" class="btn btn-danger">Clear Logs</button>
            </form>
            <span class="ms-3">Showing last @Model.Logs.Count() entries</span>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Timestamp (UTC)</th>
                        <th>ID</th>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Status</th>
                        <th>Duration</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.Logs)
                    {
                            <tr>
                                <td class="timestamp">@log.Timestamp.ToString("yyyy-MM-dd HH:mm:ss.fff")</td>
                                <td><code>@log.Id</code></td>
                                <td>
                                    <span class="badge method-badge @GetMethodClass(log.Method)">
                                    @log.Method
                                    </span>
                                </td>
                                <td>
                                @log.Path@log.QueryString
                                </td>
                                <td>
                                    <span class="badge @GetStatusClass(log.ResponseStatusCode)">
                                    @log.ResponseStatusCode
                                    </span>
                                </td>
                                <td>@log.Duration.TotalMilliseconds.ToString("0.00")ms</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-primary" type="button" 
                                            data-bs-toggle="collapse" data-bs-target="#details-@log.Id">
                                        View Details
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="7" class="p-0">
                                    <div class="collapse" id="details-@log.Id">
                                        <div class="card card-body m-2">
                                            <h6>Request Headers</h6>
                                            <pre class="log-details">@GetHeadersString(log.Headers)</pre>

                                        @if (!string.IsNullOrEmpty(log.Body))
                                        {
                                                    <h6>Request Body</h6>
                                                    <pre class="log-details">@log.Body</pre>
                                        }

                                            <h6>Response Headers</h6>
                                            <pre class="log-details">@GetHeadersString(log.ResponseHeaders)</pre>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

@functions {
    private string GetMethodClass(string method) => method.ToUpper() switch
    {
        "GET" => "bg-success text-white",
        "POST" => "bg-primary text-white",
        "PUT" => "bg-warning text-dark",
        "DELETE" => "bg-danger text-white",
        "PATCH" => "bg-info text-dark",
        _ => "bg-secondary text-white"
    };

    private string GetStatusClass(int statusCode) => statusCode switch
    {
        >= 200 and < 300 => "bg-success",
        >= 300 and < 400 => "bg-info",
        >= 400 and < 500 => "bg-warning",
        >= 500 => "bg-danger",
        _ => "bg-secondary"
    };

    private string GetHeadersString(Dictionary<string, string> headers)
    {
        return string.Join("\n", headers.Select(h => $"{h.Key}: {h.Value}"));
    }
}